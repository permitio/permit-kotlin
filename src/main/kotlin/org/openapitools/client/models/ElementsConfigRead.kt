/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ElementsType
import org.openapitools.client.models.PermissionLevelRoleRead
import org.openapitools.client.models.Settings
import org.openapitools.client.models.WebhookRead

import com.squareup.moshi.Json

/**
 * 
 *
 * @param key A URL-friendly name of the elements_config (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the elements_config.
 * @param id Unique id of the elements_config
 * @param organizationId Unique id of the organization that the elements_config belongs to.
 * @param projectId Unique id of the project that the elements_config belongs to.
 * @param environmentId Unique id of the environment that the elements_config belongs to.
 * @param createdAt Date and time when the elements_config was created (ISO_8601 format).
 * @param updatedAt Date and time when the elements_config was last updated/modified (ISO_8601 format).
 * @param isActive 
 * @param name The name of the elements_config
 * @param elementsType The type of the elements interface, e.g: user management
 * @param settings Obj with the options of the elements interface, e.g: primary color
 * @param rolesToLevels Obj with levels as keys and role ids as values
 * @param webhook 
 */


data class ElementsConfigRead (

    /* A URL-friendly name of the elements_config (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the elements_config. */
    @Json(name = "key")
    val key: kotlin.String,

    /* Unique id of the elements_config */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Unique id of the organization that the elements_config belongs to. */
    @Json(name = "organization_id")
    val organizationId: java.util.UUID,

    /* Unique id of the project that the elements_config belongs to. */
    @Json(name = "project_id")
    val projectId: java.util.UUID,

    /* Unique id of the environment that the elements_config belongs to. */
    @Json(name = "environment_id")
    val environmentId: java.util.UUID,

    /* Date and time when the elements_config was created (ISO_8601 format). */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime,

    /* Date and time when the elements_config was last updated/modified (ISO_8601 format). */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime,

    @Json(name = "is_active")
    val isActive: kotlin.Boolean,

    /* The name of the elements_config */
    @Json(name = "name")
    val name: kotlin.String,

    /* The type of the elements interface, e.g: user management */
    @Json(name = "elements_type")
    val elementsType: ElementsType,

    /* Obj with the options of the elements interface, e.g: primary color */
    @Json(name = "settings")
    val settings: kotlin.collections.Map<kotlin.String, Settings>,

    /* Obj with levels as keys and role ids as values */
    @Json(name = "roles_to_levels")
    val rolesToLevels: kotlin.collections.Map<kotlin.String, kotlin.collections.List<PermissionLevelRoleRead>>,

    @Json(name = "webhook")
    val webhook: WebhookRead? = null

)

