/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.APIKeyOwnerType
import org.openapitools.client.models.AuthnMeAPIKeyRead
import org.openapitools.client.models.AuthnMeMemberRead
import org.openapitools.client.models.AuthnMeUserRead
import org.openapitools.client.models.MemberAccessObj

import com.squareup.moshi.Json

/**
 * 
 *
 * @param id 
 * @param email Email of the user controlling this account
 * @param isOnboarding 
 * @param onboardingStep 
 * @param key 
 * @param orgId 
 * @param projectId 
 * @param envId 
 * @param tenantId 
 * @param objectType 
 * @param ownerType 
 * @param actorType 
 * @param name Name of this user
 * @param givenName Given name of the user
 * @param familyName Family name of the user
 * @param picture URL to picture, photo, or avatar of the user that controls this account.
 */


interface Actor {

    @Json(name = "id")
    val id: java.util.UUID
    /* Email of the user controlling this account */
    @Json(name = "email")
    val email: kotlin.String
    @Json(name = "is_onboarding")
    val isOnboarding: Actor.IsOnboarding
    @Json(name = "onboarding_step")
    val onboardingStep: Actor.OnboardingStep
    @Json(name = "key")
    val key: kotlin.String
    @Json(name = "org_id")
    val orgId: java.util.UUID
    @Json(name = "project_id")
    val projectId: java.util.UUID
    @Json(name = "env_id")
    val envId: java.util.UUID
    @Json(name = "tenant_id")
    val tenantId: java.util.UUID
    @Json(name = "object_type")
    val objectType: MemberAccessObj
    @Json(name = "owner_type")
    val ownerType: APIKeyOwnerType
    @Json(name = "actor_type")
    val actorType: Actor.ActorType?
    /* Name of this user */
    @Json(name = "name")
    val name: kotlin.String?
    /* Given name of the user */
    @Json(name = "given_name")
    val givenName: kotlin.String?
    /* Family name of the user */
    @Json(name = "family_name")
    val familyName: kotlin.String?
    /* URL to picture, photo, or avatar of the user that controls this account. */
    @Json(name = "picture")
    val picture: kotlin.String?
    /**
     * 
     *
     * Values: `false`
     */
    enum class IsOnboarding(val value: kotlin.Boolean) {
        @Json(name = ""false"") `false`("false");
    }
    /**
     * 
     *
     * Values: done
     */
    enum class OnboardingStep(val value: kotlin.String) {
        @Json(name = "done") done("done");
    }
    /**
     * 
     *
     * Values: apiKey
     */
    enum class ActorType(val value: kotlin.String) {
        @Json(name = "api_key") apiKey("api_key");
    }
}

