/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param name The name of the role
 * @param key A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.
 * @param id Unique id of the role
 * @param organizationId Unique id of the organization that the role belongs to.
 * @param projectId Unique id of the project that the role belongs to.
 * @param environmentId Unique id of the environment that the role belongs to.
 * @param resourceId Unique id of the resource that the role belongs to.
 * @param createdAt Date and time when the role was created (ISO_8601 format).
 * @param updatedAt Date and time when the role was last updated/modified (ISO_8601 format).
 * @param description optional description string explaining what this role represents, or what permissions are granted to it.
 * @param permissions list of action keys that define what actions this resource role is permitted to do
 * @param extends list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.
 */


data class ResourceRoleRead (

    /* The name of the role */
    @Json(name = "name")
    val name: kotlin.String,

    /* A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role. */
    @Json(name = "key")
    val key: kotlin.String,

    /* Unique id of the role */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Unique id of the organization that the role belongs to. */
    @Json(name = "organization_id")
    val organizationId: java.util.UUID,

    /* Unique id of the project that the role belongs to. */
    @Json(name = "project_id")
    val projectId: java.util.UUID,

    /* Unique id of the environment that the role belongs to. */
    @Json(name = "environment_id")
    val environmentId: java.util.UUID,

    /* Unique id of the resource that the role belongs to. */
    @Json(name = "resource_id")
    val resourceId: java.util.UUID,

    /* Date and time when the role was created (ISO_8601 format). */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime,

    /* Date and time when the role was last updated/modified (ISO_8601 format). */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime,

    /* optional description string explaining what this role represents, or what permissions are granted to it. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* list of action keys that define what actions this resource role is permitted to do */
    @Json(name = "permissions")
    val permissions: kotlin.collections.List<kotlin.String>? = null,

    /* list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list. */
    @Json(name = "extends")
    val extends: kotlin.collections.List<kotlin.String>? = null

)

