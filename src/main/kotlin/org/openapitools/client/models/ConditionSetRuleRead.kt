/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param id Unique id of the condition set rule
 * @param key A unique id by which Permit will identify this condition set rule.
 * @param userSet the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset
 * @param permission a permission that is currently granted to the userset *on* the resourceset.
 * @param resourceSet the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*
 * @param organizationId Unique id of the organization that the condition set rule belongs to.
 * @param projectId Unique id of the project that the condition set rule belongs to.
 * @param environmentId Unique id of the environment that the condition set rule belongs to.
 * @param createdAt Date and time when the condition set rule was created (ISO_8601 format).
 * @param updatedAt Date and time when the condition set rule was last updated/modified (ISO_8601 format).
 */


data class ConditionSetRuleRead (

    /* Unique id of the condition set rule */
    @Json(name = "id")
    val id: java.util.UUID,

    /* A unique id by which Permit will identify this condition set rule. */
    @Json(name = "key")
    val key: kotlin.String,

    /* the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset */
    @Json(name = "user_set")
    val userSet: kotlin.String,

    /* a permission that is currently granted to the userset *on* the resourceset. */
    @Json(name = "permission")
    val permission: kotlin.String,

    /* the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission* */
    @Json(name = "resource_set")
    val resourceSet: kotlin.String,

    /* Unique id of the organization that the condition set rule belongs to. */
    @Json(name = "organization_id")
    val organizationId: java.util.UUID,

    /* Unique id of the project that the condition set rule belongs to. */
    @Json(name = "project_id")
    val projectId: java.util.UUID,

    /* Unique id of the environment that the condition set rule belongs to. */
    @Json(name = "environment_id")
    val environmentId: java.util.UUID,

    /* Date and time when the condition set rule was created (ISO_8601 format). */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime,

    /* Date and time when the condition set rule was last updated/modified (ISO_8601 format). */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime

)

