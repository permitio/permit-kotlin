/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * An enumeration.
 *
 * Values: lEVEL1,lEVEL2,lEVEL3,lEVEL4,hIDDEN,uNCONFIGURED
 */

enum class ElementsPermissionLevel(val value: kotlin.String) {

    @Json(name = "LEVEL_1")
    lEVEL1("LEVEL_1"),

    @Json(name = "LEVEL_2")
    lEVEL2("LEVEL_2"),

    @Json(name = "LEVEL_3")
    lEVEL3("LEVEL_3"),

    @Json(name = "LEVEL_4")
    lEVEL4("LEVEL_4"),

    @Json(name = "HIDDEN")
    hIDDEN("HIDDEN"),

    @Json(name = "UNCONFIGURED")
    uNCONFIGURED("UNCONFIGURED");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ElementsPermissionLevel) "$data" else null

        /**
         * Returns a valid [ElementsPermissionLevel] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ElementsPermissionLevel? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

